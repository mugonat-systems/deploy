name: Auto Release

on:
  push:
    branches:
      - main  # Triggers on every push to main branch

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version
        id: version
        run: |
          # Generate version based on date and commit count
          VERSION="v$(date +'%Y.%m.%d')-build.${{ github.run_number }}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check_release
        run: |
          if git rev-parse "${{ steps.version.outputs.VERSION }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create tag
        if: steps.check_release.outputs.exists == 'false'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ steps.version.outputs.VERSION }}
          git push origin ${{ steps.version.outputs.VERSION }}

      - name: Get commit messages
        id: commits
        run: |
          COMMITS=$(git log -1 --pretty=format:"- %s (%h)")
          echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        if: steps.check_release.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          release_name: Auto Release ${{ steps.version.outputs.VERSION }}
          body: |
            Automated release from commit ${{ github.sha }}
            
            ## Latest Commit
            ${{ steps.commits.outputs.COMMITS }}
          draft: false
          prerelease: true  # Mark as pre-release